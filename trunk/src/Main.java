
import java.awt.Color;
import java.awt.Component;
import java.awt.PopupMenu;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicBorders;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author dodan_000
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    User user = new User();
    ImportExport importExport = new ImportExport();
    BorrowLend borrowLend = new BorrowLend();
    ArrayList<String> importTypeList = new ArrayList<String>();
    ArrayList<String> exportTypeList = new ArrayList<String>();
    ArrayList<String> userList = new ArrayList<String>();

    @Override
    public Component add(Component comp, int index) {
        return super.add(comp, index); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void add(Component comp, Object constraints) {
        super.add(comp, constraints); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void add(PopupMenu popup) {
        super.add(popup); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Component add(Component comp) {
        return super.add(comp); //To change body of generated methods, choose Tools | Templates.
    }
    
    public Main() {
        Database.setState();// test
        initComponents();
        setImportTypeList(importExport.getImportTypeList());
        setExportTypeList(importExport.getExportTypeList());
        setUserList(user.getUserList());    
        layerBorrowLend.setVisible(false);
        layerImportExport.setVisible(false);
        layerAccountSettings.setVisible(false);
        layerThongKe.setVisible(false);
        layerMenu.setVisible(true);
        initLayerAccountSettings();
        initLayerStatistics();
        initCombobox1();
    }
    
    
    private void setImportTypeList(ArrayList<String> importTypeList){
        this.importTypeList = importTypeList;
    }
    private void setExportTypeList(ArrayList<String> exportTypeList){
        this.exportTypeList = exportTypeList;
    }
    private void setUserList(ArrayList<String> userList){
        this.userList = userList;
    }
    public void setUser(String userName){
        user.userName = userName;
        user.id = user.getUserId(userName);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jMenu3 = new javax.swing.JMenu();
        layerThongKe = new javax.swing.JLayeredPane();
        jDesktopPane4 = new javax.swing.JDesktopPane();
        jpThongKe = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        tfPhanNhom = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        tfThanhVien = new javax.swing.JTextField();
        btHuyBo = new javax.swing.JButton();
        cbPhanNhom = new javax.swing.JComboBox();
        cbThanhVien = new javax.swing.JComboBox();
        btThucHien = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbBangThongKe = new javax.swing.JTable();
        rbtThuNhap = new javax.swing.JRadioButton();
        rbtChiTieu = new javax.swing.JRadioButton();
        lbTong = new javax.swing.JLabel();
        jdcEndDay = new com.toedter.calendar.JDateChooser();
        jdcStartDay = new com.toedter.calendar.JDateChooser();
        btCharThu = new javax.swing.JButton();
        btChartChi = new javax.swing.JButton();
        layerAccountSettings = new javax.swing.JLayeredPane();
        dpAccountSettings = new javax.swing.JDesktopPane();
        jpAccount = new javax.swing.JPanel();
        jtpAccount = new javax.swing.JTabbedPane();
        jpEdit = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jpAddDelete = new javax.swing.JPanel();
        jpSetPrivilege = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jpPrivilegeImport = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        listPrivilegeImport = new javax.swing.JList();
        jpPrivilegeExport = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        listPrivilegeExport = new javax.swing.JList();
        jpPrivilegeBorrow = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        listPrivilegeBorrow = new javax.swing.JList();
        jpPrivilegeLend = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        listPrivilegeLend = new javax.swing.JList();
        cboxPrivilegeFrom = new javax.swing.JComboBox();
        cboxPrivilegeTo = new javax.swing.JComboBox();
        btnPrivilegeSet = new javax.swing.JButton();
        layerImportExport = new javax.swing.JLayeredPane();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jpImportExport = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        cboxIEType = new javax.swing.JComboBox();
        txtValue = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbImportExport = new javax.swing.JTable();
        cboxIE = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNote = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        cboxIEUser = new javax.swing.JComboBox();
        layerBorrowLend = new javax.swing.JLayeredPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jpBorrowLend = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbBorrowLend = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        cboxBL = new javax.swing.JComboBox();
        cboxType = new javax.swing.JComboBox();
        txtValue2 = new javax.swing.JTextField();
        txtRate = new javax.swing.JTextField();
        txtDate2 = new javax.swing.JTextField();
        txtExpiry = new javax.swing.JTextField();
        txtPartner = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        txtStatus = new javax.swing.JTextField();
        layerMenu = new javax.swing.JLayeredPane();
        jDesktopPane3 = new javax.swing.JDesktopPane();
        jpMain = new javax.swing.JPanel();
        btnAddImportExport = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel17.setText("Từ Ngày");

        jLabel18.setText("Đến Ngày");

        jLabel19.setText("Phân Nhóm");

        tfPhanNhom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfPhanNhomKeyPressed(evt);
            }
        });

        jLabel20.setText("Thành Viên");

        tfThanhVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfThanhVienActionPerformed(evt);
            }
        });
        tfThanhVien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfThanhVienKeyPressed(evt);
            }
        });

        btHuyBo.setText("Hủy Bỏ");
        btHuyBo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHuyBoActionPerformed(evt);
            }
        });

        cbPhanNhom.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbPhanNhomPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        cbThanhVien.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbThanhVienPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        btThucHien.setText("Thực hiện");
        btThucHien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThucHienActionPerformed(evt);
            }
        });

        tbBangThongKe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jScrollPane3.setViewportView(tbBangThongKe);

        buttonGroup1.add(rbtThuNhap);
        rbtThuNhap.setSelected(true);
        rbtThuNhap.setText("Thống kế thu nhập");
        rbtThuNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtThuNhapActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtChiTieu);
        rbtChiTieu.setText("Thống kê chi tiêu");
        rbtChiTieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtChiTieuActionPerformed(evt);
            }
        });

        lbTong.setText("Tổng Thu Nhập: ");

        jdcEndDay.setDateFormatString("yyyy/MM/dd");

        jdcStartDay.setDateFormatString("yyyy/MM/dd");

        btCharThu.setText("Biểu đồ thu nhập");
        btCharThu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCharThuActionPerformed(evt);
            }
        });

        btChartChi.setText("Biểu đồ chi tiêu");
        btChartChi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btChartChiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpThongKeLayout = new javax.swing.GroupLayout(jpThongKe);
        jpThongKe.setLayout(jpThongKeLayout);
        jpThongKeLayout.setHorizontalGroup(
            jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpThongKeLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lbTong)
                .addGap(337, 337, 337))
            .addGroup(jpThongKeLayout.createSequentialGroup()
                .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpThongKeLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpThongKeLayout.createSequentialGroup()
                                .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(85, 85, 85)
                                .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jpThongKeLayout.createSequentialGroup()
                                        .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(tfPhanNhom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                                            .addComponent(tfThanhVien))
                                        .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jpThongKeLayout.createSequentialGroup()
                                                .addGap(86, 86, 86)
                                                .addComponent(btChartChi))
                                            .addGroup(jpThongKeLayout.createSequentialGroup()
                                                .addGap(70, 70, 70)
                                                .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(cbThanhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(cbPhanNhom, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(jpThongKeLayout.createSequentialGroup()
                                        .addComponent(jdcStartDay, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(75, 75, 75)
                                        .addComponent(jLabel18)
                                        .addGap(18, 18, 18)
                                        .addComponent(jdcEndDay, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jpThongKeLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbtThuNhap)
                                    .addComponent(rbtChiTieu))
                                .addGap(33, 33, 33)
                                .addComponent(btThucHien)
                                .addGap(59, 59, 59)
                                .addComponent(btHuyBo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(btCharThu))))
                    .addGroup(jpThongKeLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(228, Short.MAX_VALUE))
        );
        jpThongKeLayout.setVerticalGroup(
            jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpThongKeLayout.createSequentialGroup()
                .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpThongKeLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpThongKeLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel18)
                                    .addGroup(jpThongKeLayout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addGap(6, 6, 6))))
                            .addComponent(jdcStartDay, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpThongKeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jdcEndDay, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfPhanNhom, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbPhanNhom, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpThongKeLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(tfThanhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpThongKeLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cbThanhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpThongKeLayout.createSequentialGroup()
                        .addComponent(rbtThuNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtChiTieu))
                    .addGroup(jpThongKeLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jpThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btHuyBo)
                            .addComponent(btThucHien)
                            .addComponent(btCharThu)
                            .addComponent(btChartChi))))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92)
                .addComponent(lbTong))
        );

        jpThongKe.setBounds(0, 0, 960, 670);
        jDesktopPane4.add(jpThongKe, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jDesktopPane4.setBounds(0, 0, 960, 640);
        layerThongKe.add(jDesktopPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jtpAccount.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jLabel10.setText("User Name");

        jLabel11.setText("PassWord");

        jLabel12.setText("Address");

        jLabel13.setText("jLabel13");

        jLabel14.setText("jLabel14");

        javax.swing.GroupLayout jpEditLayout = new javax.swing.GroupLayout(jpEdit);
        jpEdit.setLayout(jpEditLayout);
        jpEditLayout.setHorizontalGroup(
            jpEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEditLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jpEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addContainerGap(399, Short.MAX_VALUE))
        );
        jpEditLayout.setVerticalGroup(
            jpEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEditLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addGap(20, 20, 20)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addContainerGap(431, Short.MAX_VALUE))
        );

        jtpAccount.addTab("Edit your account", jpEdit);

        javax.swing.GroupLayout jpAddDeleteLayout = new javax.swing.GroupLayout(jpAddDelete);
        jpAddDelete.setLayout(jpAddDeleteLayout);
        jpAddDeleteLayout.setHorizontalGroup(
            jpAddDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 503, Short.MAX_VALUE)
        );
        jpAddDeleteLayout.setVerticalGroup(
            jpAddDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 603, Short.MAX_VALUE)
        );

        jtpAccount.addTab("Add/Delete account", jpAddDelete);

        jLabel15.setText("From");

        jLabel16.setText("To");

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        listPrivilegeImport.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(listPrivilegeImport);

        javax.swing.GroupLayout jpPrivilegeImportLayout = new javax.swing.GroupLayout(jpPrivilegeImport);
        jpPrivilegeImport.setLayout(jpPrivilegeImportLayout);
        jpPrivilegeImportLayout.setHorizontalGroup(
            jpPrivilegeImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPrivilegeImportLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(174, Short.MAX_VALUE))
        );
        jpPrivilegeImportLayout.setVerticalGroup(
            jpPrivilegeImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPrivilegeImportLayout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Import", jpPrivilegeImport);

        listPrivilegeExport.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(listPrivilegeExport);

        javax.swing.GroupLayout jpPrivilegeExportLayout = new javax.swing.GroupLayout(jpPrivilegeExport);
        jpPrivilegeExport.setLayout(jpPrivilegeExportLayout);
        jpPrivilegeExportLayout.setHorizontalGroup(
            jpPrivilegeExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPrivilegeExportLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
        );
        jpPrivilegeExportLayout.setVerticalGroup(
            jpPrivilegeExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPrivilegeExportLayout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Export", jpPrivilegeExport);

        listPrivilegeBorrow.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane7.setViewportView(listPrivilegeBorrow);

        javax.swing.GroupLayout jpPrivilegeBorrowLayout = new javax.swing.GroupLayout(jpPrivilegeBorrow);
        jpPrivilegeBorrow.setLayout(jpPrivilegeBorrowLayout);
        jpPrivilegeBorrowLayout.setHorizontalGroup(
            jpPrivilegeBorrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPrivilegeBorrowLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(150, Short.MAX_VALUE))
        );
        jpPrivilegeBorrowLayout.setVerticalGroup(
            jpPrivilegeBorrowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPrivilegeBorrowLayout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Borrow", jpPrivilegeBorrow);

        listPrivilegeLend.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane8.setViewportView(listPrivilegeLend);

        javax.swing.GroupLayout jpPrivilegeLendLayout = new javax.swing.GroupLayout(jpPrivilegeLend);
        jpPrivilegeLend.setLayout(jpPrivilegeLendLayout);
        jpPrivilegeLendLayout.setHorizontalGroup(
            jpPrivilegeLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPrivilegeLendLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(139, Short.MAX_VALUE))
        );
        jpPrivilegeLendLayout.setVerticalGroup(
            jpPrivilegeLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPrivilegeLendLayout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Lend", jpPrivilegeLend);

        btnPrivilegeSet.setText("Set");
        btnPrivilegeSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrivilegeSetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpSetPrivilegeLayout = new javax.swing.GroupLayout(jpSetPrivilege);
        jpSetPrivilege.setLayout(jpSetPrivilegeLayout);
        jpSetPrivilegeLayout.setHorizontalGroup(
            jpSetPrivilegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSetPrivilegeLayout.createSequentialGroup()
                .addGroup(jpSetPrivilegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpSetPrivilegeLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jpSetPrivilegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpSetPrivilegeLayout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboxPrivilegeFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboxPrivilegeTo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpSetPrivilegeLayout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(btnPrivilegeSet, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jpSetPrivilegeLayout.setVerticalGroup(
            jpSetPrivilegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSetPrivilegeLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jpSetPrivilegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(cboxPrivilegeFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboxPrivilegeTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnPrivilegeSet)
                .addContainerGap(177, Short.MAX_VALUE))
        );

        jtpAccount.addTab("Set privilege", jpSetPrivilege);

        javax.swing.GroupLayout jpAccountLayout = new javax.swing.GroupLayout(jpAccount);
        jpAccount.setLayout(jpAccountLayout);
        jpAccountLayout.setHorizontalGroup(
            jpAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAccountLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jtpAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(283, Short.MAX_VALUE))
        );
        jpAccountLayout.setVerticalGroup(
            jpAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtpAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jpAccount.setBounds(20, 10, 930, 670);
        dpAccountSettings.add(jpAccount, javax.swing.JLayeredPane.DEFAULT_LAYER);

        dpAccountSettings.setBounds(10, 10, 970, 710);
        layerAccountSettings.add(dpAccountSettings, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        cboxIEType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Type" }));
        cboxIEType.setMaximumSize(new java.awt.Dimension(1000, 20));
        cboxIEType.setMinimumSize(new java.awt.Dimension(200, 40));
        cboxIEType.setName(""); // NOI18N
        cboxIEType.setPreferredSize(new java.awt.Dimension(500, 20));

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tbImportExport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "User", "Date", "Type", "Value", "Note"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbImportExport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbImportExportMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbImportExport);

        cboxIE.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Import", "Export" }));
        cboxIE.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboxIEItemStateChanged(evt);
            }
        });

        jLabel1.setText("Value");

        jLabel2.setText("Date");

        jLabel3.setText("Note");

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        cboxIEUser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No User" }));

        javax.swing.GroupLayout jpImportExportLayout = new javax.swing.GroupLayout(jpImportExport);
        jpImportExport.setLayout(jpImportExportLayout);
        jpImportExportLayout.setHorizontalGroup(
            jpImportExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpImportExportLayout.createSequentialGroup()
                .addGroup(jpImportExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpImportExportLayout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(jLabel1)
                        .addGap(96, 96, 96)
                        .addComponent(jLabel2)
                        .addGap(122, 122, 122)
                        .addComponent(jLabel3))
                    .addGroup(jpImportExportLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(cboxIE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jpImportExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpImportExportLayout.createSequentialGroup()
                                .addGroup(jpImportExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jpImportExportLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(cboxIEType, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jpImportExportLayout.createSequentialGroup()
                                        .addGap(113, 113, 113)
                                        .addComponent(btnAdd)
                                        .addGap(31, 31, 31)
                                        .addComponent(btnUpdate)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpImportExportLayout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(cboxIEUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(btnView))))
                    .addGroup(jpImportExportLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        jpImportExportLayout.setVerticalGroup(
            jpImportExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpImportExportLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jpImportExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpImportExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboxIEType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboxIE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpImportExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addGroup(jpImportExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(cboxIEUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
        );

        jpImportExport.setBounds(10, 10, 880, 680);
        jDesktopPane2.add(jpImportExport, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jDesktopPane2.setBounds(20, 20, 890, 690);
        layerImportExport.add(jDesktopPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        tbBorrowLend.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "User", "Value", "Rate", "Date Borrow/Lend", "Expire Date", "Info Partner", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbBorrowLend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbBorrowLendMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbBorrowLend);

        jButton8.setText("View");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        cboxBL.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Borrow", "Lend" }));
        cboxBL.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboxBLItemStateChanged(evt);
            }
        });
        cboxBL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxBLActionPerformed(evt);
            }
        });

        cboxType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxTypeActionPerformed(evt);
            }
        });

        txtValue2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValue2ActionPerformed(evt);
            }
        });

        txtRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRateActionPerformed(evt);
            }
        });

        txtDate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDate2ActionPerformed(evt);
            }
        });

        txtExpiry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExpiryActionPerformed(evt);
            }
        });

        txtPartner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPartnerActionPerformed(evt);
            }
        });

        jLabel21.setText("Partner");

        jLabel22.setText("Expire Date");

        jLabel23.setText("Date ");

        jLabel24.setText("Rate");

        jLabel25.setText("Value");

        jLabel26.setText("Type");

        jButton9.setText("Add");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Update");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Delete");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        txtStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBorrowLendLayout = new javax.swing.GroupLayout(jpBorrowLend);
        jpBorrowLend.setLayout(jpBorrowLendLayout);
        jpBorrowLendLayout.setHorizontalGroup(
            jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBorrowLendLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpBorrowLendLayout.createSequentialGroup()
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jpBorrowLendLayout.createSequentialGroup()
                        .addGroup(jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpBorrowLendLayout.createSequentialGroup()
                                .addComponent(cboxBL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jLabel26))
                            .addComponent(cboxType, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addComponent(txtValue2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBorrowLendLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(257, 257, 257))
                            .addGroup(jpBorrowLendLayout.createSequentialGroup()
                                .addGroup(jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtRate, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jpBorrowLendLayout.createSequentialGroup()
                                        .addGroup(jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel23))
                                        .addGap(18, 18, 18)
                                        .addGroup(jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel22)
                                            .addComponent(txtExpiry, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPartner, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jpBorrowLendLayout.createSequentialGroup()
                                        .addGap(88, 88, 88)
                                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(67, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBorrowLendLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))
                    .addComponent(jScrollPane4)))
        );
        jpBorrowLendLayout.setVerticalGroup(
            jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBorrowLendLayout.createSequentialGroup()
                .addGroup(jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpBorrowLendLayout.createSequentialGroup()
                        .addContainerGap(39, Short.MAX_VALUE)
                        .addGroup(jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25)
                            .addComponent(jLabel26))
                        .addGap(18, 18, 18))
                    .addGroup(jpBorrowLendLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(cboxBL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtValue2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtExpiry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPartner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cboxType, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jpBorrowLendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9)
                    .addComponent(jButton10)
                    .addComponent(jButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(256, 256, 256))
        );

        jpBorrowLend.setBounds(0, 0, 663, 716);
        jDesktopPane1.add(jpBorrowLend, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jDesktopPane1.setBounds(10, 10, 890, 690);
        layerBorrowLend.add(jDesktopPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnAddImportExport.setText("Add Import/Export");
        btnAddImportExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddImportExportActionPerformed(evt);
            }
        });

        jButton2.setText("Add Borrow/Lend");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Statistics");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpMainLayout = new javax.swing.GroupLayout(jpMain);
        jpMain.setLayout(jpMainLayout);
        jpMainLayout.setHorizontalGroup(
            jpMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpMainLayout.createSequentialGroup()
                .addContainerGap(242, Short.MAX_VALUE)
                .addGroup(jpMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddImportExport, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(173, 173, 173))
        );
        jpMainLayout.setVerticalGroup(
            jpMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpMainLayout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addGroup(jpMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddImportExport, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
        );

        jpMain.setBounds(10, 20, 710, 300);
        jDesktopPane3.add(jpMain, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jDesktopPane3.setBounds(20, 10, 760, 340);
        layerMenu.add(jDesktopPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jMenu1.setText("Option");

        jMenuItem1.setText("Account Settings");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Menu");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem2.setText("Main Menu");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(layerImportExport, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 124, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(layerMenu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(layerBorrowLend, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 124, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(layerAccountSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 989, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 35, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(layerThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 975, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 49, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(layerImportExport, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 47, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(layerMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 53, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(layerBorrowLend, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 47, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(layerAccountSettings, javax.swing.GroupLayout.DEFAULT_SIZE, 736, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(layerThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 67, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        layerMenu.setVisible(false);
        layerThongKe.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cboxIEItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboxIEItemStateChanged
          
                String type = (String) cboxIE.getSelectedItem();
                if(type.equals("Import")){   
                    cboxIEType.removeAllItems();
                    cboxIEType.addItem("All");
                    for(String s : importTypeList){
                        cboxIEType.addItem(s);
                    }
                    
                }
                else if(type.equals("Export")){
                    cboxIEType.removeAllItems();
                    cboxIEType.addItem("All");
                    for(String s : exportTypeList){
                        cboxIEType.addItem(s);
                    }
                }
    }//GEN-LAST:event_cboxIEItemStateChanged
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
      
            int i = cboxIE.getSelectedIndex();
            boolean isImport;
            if(i==1){
                JOptionPane.showMessageDialog(jpImportExport, "Ban vua bam nut Add cho Import");
                isImport=true;           
                InfoImportExport infoIE = new InfoImportExport(txtDate.getText(),Integer.parseInt(txtValue.getText()),txtNote.getText(),user.id,cboxIEType.getSelectedIndex(),isImport);
                if(importExport.insert(infoIE)) JOptionPane.showMessageDialog(jpImportExport, "Add thanh cong");
                else JOptionPane.showMessageDialog(jpImportExport, "Add that bai");
            }
            else if(i==2){
                JOptionPane.showMessageDialog(jpImportExport, "Ban vua bam nut Add cho Export");
                isImport=false;
                InfoImportExport infoIE = new InfoImportExport(txtDate.getText(),Integer.parseInt(txtValue.getText()),txtNote.getText(),user.id,cboxIEType.getSelectedIndex(),isImport);           
                if(importExport.insert(infoIE)) JOptionPane.showMessageDialog(jpImportExport, "Add thanh cong");
                else JOptionPane.showMessageDialog(jpImportExport, "Add that bai");
            }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if(tbImportExport.getSelectedRow()!= -1){
            int i = cboxIE.getSelectedIndex();
            boolean isImport;
            int row = tbImportExport.getSelectedRow();
            if(i==1){
                JOptionPane.showMessageDialog(jpImportExport, "Ban vua bam nut Update cho Import");
                isImport=true;
                InfoImportExport infoIE = new InfoImportExport(txtDate.getText(),Integer.parseInt(txtValue.getText()), txtNote.getText(),user.getUserId(tbImportExport.getValueAt(row, 1).toString()), cboxIEType.getSelectedIndex(),isImport);           
                if(importExport.update((int)tbImportExport.getValueAt(tbImportExport.getSelectedRow(), 0), infoIE)) JOptionPane.showMessageDialog(jpImportExport, "Update thanh cong");
                else JOptionPane.showMessageDialog(jpImportExport, "Update thanh cong");
            }
            else if(i==2){
                JOptionPane.showMessageDialog(jpImportExport, "Ban vua bam nut Update cho Export");
                isImport=false;
                InfoImportExport infoIE = new InfoImportExport(txtDate.getText(),Integer.parseInt(txtValue.getText()),txtNote.getText(),user.id,cboxIEType.getSelectedIndex(),isImport);           
                if(importExport.update((int)tbImportExport.getValueAt(tbImportExport.getSelectedRow(), 0), infoIE)) JOptionPane.showMessageDialog(jpImportExport, "Update thanh cong");
                else JOptionPane.showMessageDialog(jpImportExport, "Update that bai");     
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(tbImportExport.getSelectedRow()!= -1){
            int i = cboxIE.getSelectedIndex();
            boolean isImport;
            if(i==1){
                JOptionPane.showMessageDialog(jpImportExport, "Ban vua bam nut Delete cho Import");
                isImport=true;
                if(importExport.delete((int)tbImportExport.getValueAt(tbImportExport.getSelectedRow(), 0), isImport)) JOptionPane.showMessageDialog(jpImportExport, "Delete Thanh cong");
                else JOptionPane.showMessageDialog(jpImportExport, "Delete That bai");

            }
            else if(i==2){
                JOptionPane.showMessageDialog(jpImportExport, "Ban vua bam nut Delete cho Export");
                isImport=false;
                if(importExport.delete((int)tbImportExport.getValueAt(tbImportExport.getSelectedRow(), 0), isImport)) JOptionPane.showMessageDialog(jpImportExport, "Delete Thanh cong");
                else JOptionPane.showMessageDialog(jpImportExport, "Delete That bai");          
            }
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        int i = cboxIE.getSelectedIndex();
        boolean isImport;
        if(i==1){
                ResultSet rs = importExport.getData(user.id, user.getUserId((String)cboxIEUser.getSelectedItem()),cboxIEType.getSelectedIndex(), true);
                tbImportExport.setModel(new rsTableModel(rs));
          
        }          
        else if(i==2){
            ResultSet rs = importExport.getData(user.id, user.getUserId((String)cboxIEUser.getSelectedItem()),cboxIEType.getSelectedIndex(), false);
            tbImportExport.setModel(new rsTableModel(rs));
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void tbImportExportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbImportExportMouseClicked
       if(evt.getButton()==MouseEvent.BUTTON1){
           int row = tbImportExport.getSelectedRow();
           txtValue.setText(tbImportExport.getValueAt(row, 4).toString());
           txtDate.setText(tbImportExport.getValueAt(row, 2).toString());
           cboxIEType.setSelectedItem(tbImportExport.getValueAt(row, 3).toString());
           try{
               txtNote.setText(tbImportExport.getValueAt(row, 5).toString());
           }catch(Exception ex){
               txtNote.setText("");
           }
       }
       
    }//GEN-LAST:event_tbImportExportMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
    if(user.id!=1){
        jtpAccount.removeTabAt(2);
        jtpAccount.removeTabAt(1);
        
    }         
        layerThongKe.setVisible(false);
        layerAccountSettings.setVisible(true);
        layerImportExport.setVisible(false);
        layerBorrowLend.setVisible(false);
        layerMenu.setVisible(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void tfPhanNhomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPhanNhomKeyPressed
        JOptionPane.showMessageDialog(null, "Mời bạn lựa chọn trong combobox");
    }//GEN-LAST:event_tfPhanNhomKeyPressed

    private void tfThanhVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfThanhVienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfThanhVienActionPerformed

    private void tfThanhVienKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfThanhVienKeyPressed
        JOptionPane.showMessageDialog(null, "Mời bạn lựa chọn trong combobox");
    }//GEN-LAST:event_tfThanhVienKeyPressed

    private void btHuyBoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHuyBoActionPerformed
        tfPhanNhom.setText("");
        tfThanhVien.setText("");

    }//GEN-LAST:event_btHuyBoActionPerformed

    private void cbPhanNhomPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbPhanNhomPopupMenuWillBecomeInvisible
        String tmp = (String)cbPhanNhom.getSelectedItem();
        tfPhanNhom.setText(tmp);
    }//GEN-LAST:event_cbPhanNhomPopupMenuWillBecomeInvisible

    private void cbThanhVienPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbThanhVienPopupMenuWillBecomeInvisible
        String tmp = (String)cbThanhVien.getSelectedItem();
        tfThanhVien.setText(tmp);
    }//GEN-LAST:event_cbThanhVienPopupMenuWillBecomeInvisible

    private void btThucHienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThucHienActionPerformed
        if(rbtThuNhap.isSelected())
        thucHien1();
        else
        thucHien2();
        //        thucHien();

    }//GEN-LAST:event_btThucHienActionPerformed

    private void rbtThuNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtThuNhapActionPerformed
//        cbPhanNhom.removeAllItems();
//        for(String s:importTypeList){
//            cbPhanNhom.addItem(s);
//        }     
         cbThanhVien.removeAllItems();
        cbPhanNhom.removeAllItems();
        initCombobox1();
    }//GEN-LAST:event_rbtThuNhapActionPerformed

    private void rbtChiTieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtChiTieuActionPerformed
         cbThanhVien.removeAllItems();
        cbPhanNhom.removeAllItems();
        initCombobox2();
    }//GEN-LAST:event_rbtChiTieuActionPerformed

    private void btnAddImportExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddImportExportActionPerformed
        layerMenu.setVisible(false);
        layerImportExport.setVisible(true);
    }//GEN-LAST:event_btnAddImportExportActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed

    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        layerBorrowLend.setVisible(true);
        layerMenu.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        layerBorrowLend.setVisible(false);
        layerImportExport.setVisible(false);
        layerAccountSettings.setVisible(false);
        layerThongKe.setVisible(false);
        layerMenu.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void btCharThuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCharThuActionPerformed
        try {
            
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
            String sql = "select sum(value) sum from importing where (year(date)) = 2013 group by(month(date))";
            rs = Database.stm.executeQuery(sql);
            int i = 0;
            do {
                if (rs.next()) {
                    i++;
                    int value = rs.getInt("sum");
                    dataset.setValue(value, "", "Tháng " + i);
                } else {
                    i++;
                    dataset.setValue(0, "", "Tháng " + i);
                }
            } while (i < 12);
            
            JFreeChart chart = ChartFactory.createBarChart3D("Số tiền", "Bảng thống kê thu nhập 2013", "", dataset, PlotOrientation.VERTICAL,false,true,false);
            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);
            ChartFrame frame = new ChartFrame("Thống kê thu nhập",chart);
            
            frame.setVisible(true);
            frame.setSize(1000, 500);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btCharThuActionPerformed

    private void btChartChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btChartChiActionPerformed
        try {
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
            String sql = "select sum(value) sum from importing where (year(date)) = 2013 group by(month(date))";
            rs = Database.stm.executeQuery(sql);
            int i = 0;
            do {
                if (rs.next()) {
                    i++;
                    int value = rs.getInt("sum");
                    dataset.setValue(value, "", "Tháng " + i);
                } else {
                    i++;
                    dataset.setValue(0, "", "Tháng " + i);
                }
            } while (i < 12);
            
            JFreeChart chart = ChartFactory.createBarChart3D("Số tiền", "Bảng thống kê chi tiêu 2013", "", dataset, PlotOrientation.VERTICAL,false,true,false);
            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);
            ChartFrame frame = new ChartFrame("Thống kê chi tiêu",chart);
            frame.setVisible(true);
            frame.setSize(1000, 500);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btChartChiActionPerformed

    private void tbBorrowLendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbBorrowLendMouseClicked
        // TODO add your handling code here:
        int row = tbBorrowLend.getSelectedRow();
        if (row ==-1) return;
        txtValue.setText(tbBorrowLend.getValueAt(row, 2).toString());
        txtRate.setText(tbBorrowLend.getValueAt(row, 3).toString());
        txtDate.setText(tbBorrowLend.getValueAt(row, 4).toString());
        txtExpiry.setText(tbBorrowLend.getValueAt(row, 5).toString());
        txtPartner.setText(tbBorrowLend.getValueAt(row, 6).toString());
        int type_id=(Integer)tbBorrowLend.getValueAt(row, 7);
        ResultSet kq=null;
        try
        {
            kq=Database.stm.executeQuery("select * from borrow_lend_type "
                + "where id = "+type_id+";");
            if (kq.next())
            cboxType.setSelectedItem(kq.getInt(1)+" : Cycle "+kq.getInt(2)+" Type "+kq.getInt(3));
        }
        catch(Exception e)
        {}

    }//GEN-LAST:event_tbBorrowLendMouseClicked

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        tbBorrowLend.removeAll();

        if (cboxBL.getSelectedIndex()==0)
        return;
        try
        {
            ResultSet kq=null;
            String lenh="";
            if (cboxBL.getSelectedIndex()==1)
            lenh="select id, user_id, value, interestRate, "
            + "dateBorrow, expiryDate, infoLender, "
            + "borrow_lend_type_id"
            + " from borrowing ";
            else
            lenh="select id, user_id, value, interestRate, "
            + "dateLend, expiryDate, infoBorrower, "
            + "borrow_lend_type_id "
            + "from lending ";
            lenh+="where user_id="+user.id+";";
            kq=Database.stm.executeQuery(lenh);

            tbBorrowLend.setModel( new rsTableModel(kq));

        }
        catch(Exception e)
        {
            System.out.println("loi");
        }

    }//GEN-LAST:event_jButton8ActionPerformed

    private void cboxBLItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboxBLItemStateChanged
        // TODO add your handling code here:
        cboxType.removeAllItems();
        cboxType.addItem("All");
        InfoBorrowLend infoBL=new InfoBorrowLend();

        ResultSet kq=null;
        try
        {
            kq=Database.stm.executeQuery("select * from borrow_lend_type;");
            while (kq.next())
            {

                cboxType.addItem(kq.getInt(1)+" : Cycle "+kq.getInt(2)+" Type "+kq.getInt(3));
            }
        }
        catch(Exception e)
        {
            System.out.println("loi");
        }
    }//GEN-LAST:event_cboxBLItemStateChanged

    private void cboxBLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxBLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxBLActionPerformed

    private void cboxTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxTypeActionPerformed

    private void txtValue2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValue2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValue2ActionPerformed

    private void txtRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRateActionPerformed

    private void txtDate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDate2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDate2ActionPerformed

    private void txtExpiryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExpiryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtExpiryActionPerformed

    private void txtPartnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPartnerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPartnerActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        try
        {
            InfoBorrowLend infoBL=new InfoBorrowLend(
                Integer.parseInt(txtValue.getText()),
                Integer.parseInt(txtRate.getText()),
                txtDate.getText(),
                txtExpiry.getText(),
                txtPartner.getText(),
                0,//borrow_lend_id
                user.id,
                cboxBL.getSelectedIndex()==1);
            String strtype=(String)cboxType.getSelectedItem();
            int i=0;
            while (strtype.charAt(i)!=' ')
            i++;

            infoBL.setBorrow_lend_id(Integer.parseInt(strtype.substring(0,i)));
            if (borrowLend.insert(infoBL))
            txtStatus.setText("Viec them thanh cong");
            else
            txtStatus.setText("Viec them that bai");
        }
        catch(Exception e)
        {
            txtStatus.setText("Viec them that bai");
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        try
        {
            InfoBorrowLend infoBL=new InfoBorrowLend(
                Integer.parseInt(txtValue.getText()),
                Integer.parseInt(txtRate.getText()),
                txtDate.getText(),
                txtExpiry.getText(),
                txtPartner.getText(),
                0,//borrow_lend_id
                user.id,
                cboxBL.getSelectedIndex()==1);
            String strtype=(String)cboxType.getSelectedItem();
            int i=0;
            while (strtype.charAt(i)!=' ')
            i++;

            infoBL.setBorrow_lend_id(Integer.parseInt(strtype.substring(0,i)));
            borrowLend.update((int)tbBorrowLend.getValueAt(tbBorrowLend.getSelectedRow(),0),infoBL);
            txtStatus.setText("Viec cap nhat thanh cong");
        }
        catch(Exception e)
        {
            txtStatus.setText("Viec cap nhat that bai");
        }

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        try
        {
            if(borrowLend.delete((int)tbBorrowLend.getValueAt(tbBorrowLend.getSelectedRow(),0),cboxType.getSelectedIndex()==1))
            txtStatus.setText("Viec xoa thanh cong");
            else
            txtStatus.setText("Viec xoa that bai");
        }
        catch(Exception e)
        {
            txtStatus.setText("Viec xoa that bai");
        }

    }//GEN-LAST:event_jButton11ActionPerformed

    private void txtStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStatusActionPerformed

    private void btnPrivilegeSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrivilegeSetActionPerformed
        int fromId = user.getUserId((String)cboxPrivilegeFrom.getSelectedItem());
        int toId = user.getUserId((String)cboxPrivilegeTo.getSelectedItem());

        ArrayList<InfoPrivilege> listPrivilege = new ArrayList<>();
        int[] listIndex;

        listIndex = listPrivilegeImport.getSelectedIndices();
        for(int i=0;i<listIndex.length;i++){
            listPrivilege.add(new InfoPrivilege(fromId, toId, 1, i+1, true));
        }

        listIndex = listPrivilegeExport.getSelectedIndices();
        for(int i=0;i<listIndex.length;i++){
            listPrivilege.add(new InfoPrivilege(fromId, toId, 2, i, true));
        }

    }//GEN-LAST:event_btnPrivilegeSetActionPerformed

    /**
     * @param args the command line arguments
     */
    private void initLayerAccountSettings(){
        DefaultListModel<String> modelImport = new DefaultListModel<>();
        for(String s:importTypeList){
            modelImport.addElement(s);
        }
        listPrivilegeImport.setModel(modelImport);
        
        DefaultListModel<String> modelExport = new DefaultListModel<>();
        for(String s:exportTypeList){
            modelExport.addElement(s);
        }
        listPrivilegeExport.setModel(modelExport);     
       
        DefaultListModel<String> modelUser = new DefaultListModel<>();
        for(String s : userList){
            cboxPrivilegeFrom.addItem(s);
            cboxPrivilegeTo.addItem(s);
        }
                      
    }
    
    private void initLayerImportExport(){
        for(String s:userList){
            cboxIEUser.addItem(s);
        }
    }
    Statement st = null;
    ResultSet rs = null;
    String nhom = null,sql1=null,sql2= null,thanhvien=null;
    public String time ="";
    

    private void initLayerStatistics(){
        
        for(String s:userList){
            cbThanhVien.addItem(s);
        }        
//        hienThoiGian();
    }

    
//    public void hienThoiGian(){
//        Date thoiGian = new Date();
//        SimpleDateFormat dinhDangThoiGian = new SimpleDateFormat("yyyy/MM/dd");
//        String hienThiThoiGian = dinhDangThoiGian.format(thoiGian.getTime()); 
////        System.out.println(hienThiThoiGian);
//        tfEndDay.setText(hienThiThoiGian);
//        int ngay = thoiGian.getDate();
//        int thang = thoiGian.getMonth() + 1; // thứ, tháng, nhỏ hiện tại 1
//        int nam = thoiGian.getYear() + 1900; //năm nhỏ hơn hiện tại 1900
//        time = ""+nam+"/"+thang+"/01";
//        tfStartDay.setText(nam+"/"+thang+"/01");
//        
//    }
    
     public void initCombobox1(){
       
        try {
            
            String sql = "select *from user";
            rs = Database.stm.executeQuery(sql);
            
            while(rs.next()){
                String s = rs.getString("name");
                cbThanhVien.addItem(s);
            }
            
            sql = "select *from import_type";
            rs = Database.stm.executeQuery(sql);
            
            while(rs.next()){
                String s = rs.getString("type");
                cbPhanNhom.addItem(s);
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
     public void initCombobox2(){
       cbThanhVien.removeAllItems();
        cbThanhVien.removeAllItems();
        try {
            
            String sql = "select *from user";
            rs = Database.stm.executeQuery(sql);
            
            while(rs.next()){
                String s = rs.getString("name");
                cbThanhVien.addItem(s);
            }
            
            sql = "select *from export_type";
            rs = Database.stm.executeQuery(sql);
           
            while(rs.next()){
                String s = rs.getString("type");
                cbPhanNhom.addItem(s);
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void thucHien1(){
        String sday = (((JTextField)jdcStartDay.getDateEditor().getUiComponent()).getText());
        String eday = (((JTextField)jdcEndDay.getDateEditor().getUiComponent()).getText());

        if((tfPhanNhom.getText().equals("") == false) && (tfThanhVien.getText().equals("") == false)){
//          
            nhom = tfPhanNhom.getText();
//            
            //cÃ¡i nÃ y dÃ¹ng Ä‘á»ƒ hiá»‡n ra báº£ng
            sql1 = "select u.name, i.date, i.value, i.note, im.type from importing i ";
            sql1 += "inner join user u on i.user_id = u.id ";
            sql1 += "inner join import_type im on im.id = i.import_type_id ";
            sql1 += "where u.name = '"+tfThanhVien.getText()+"' and im.type = '"+tfPhanNhom.getText()+"'and i.date between '"+sday+"' and '"+eday+"'";
//            System.out.println(sql1);
            
            
            //cÃ¡i nÃ y dÃ¹ng Ä‘á»ƒ tÃ­nh tá»•ng values(tiá»�n)
            sql2 = "select sum(value) sum from importing i ";
            sql2 += "inner join user u on i.user_id = u.id ";
            sql2 += "inner join import_type im on im.id = i.import_type_id ";
            sql2 += "where u.name = '"+tfThanhVien.getText()+"' and im.type = '"+tfPhanNhom.getText()+"'and i.date between '"+sday+"' and '"+eday+"'";
//            System.out.println(sql2);
            
            try {
                
                
                rs = Database.stm.executeQuery(sql1);
                tbBangThongKe.setModel(new rsTableModel(rs));
                rs = st.executeQuery(sql2);
                if(rs.next()){
                    int sum = rs.getInt("sum");
                    lbTong.setText("Tổng thu nhập là : "+sum);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
        else if(tfPhanNhom.getText().equals("") == true && tfThanhVien.getText().equals("") == false){
//            System.out.println("2");
            nhom = "";
            thanhvien = tfThanhVien.getText();
            sql1 = "select u.name, i.date, i.value, i.note, im.type from importing i ";
            sql1 += "inner join user u on i.user_id = u.id ";
            sql1 += "inner join import_type im on im.id = i.import_type_id ";
            sql1 += "where u.name = '"+thanhvien+"' and i.date between '"+sday+"' and '"+eday+"'";
//            System.out.println(sql1);
            
            sql2 = "select sum(value) sum from importing i ";
            sql2 += "inner join user u on i.user_id = u.id ";
            sql2 += "inner join import_type im on im.id = i.import_type_id ";
            sql2 += "where u.name = '"+thanhvien+"' and i.date between '"+sday+"' and '"+eday+"'";
            System.out.println(sql2);
            
            try {
                
                
                rs = Database.stm.executeQuery(sql1);
                tbBangThongKe.setModel(new rsTableModel(rs));
                rs = Database.stm.executeQuery(sql2);
                if(rs.next()){
                    int sum = rs.getInt("sum");
                    lbTong.setText("Tổng thu nhập là : "+sum);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
        else if(tfPhanNhom.getText().equals("") == false && tfThanhVien.getText().equals("") == true){
//            System.out.println("3");
            nhom = tfPhanNhom.getText();
            thanhvien = tfThanhVien.getText();
            System.out.println(nhom );
            System.out.println(thanhvien);
            sql1 = "select u.name, i.date, i.value, i.note, im.type from importing i  ";
            sql1 += "inner join user u on i.user_id = u.id ";
            sql1 += "inner join import_type im on im.id = i.import_type_id ";
            sql1 += "where im.type = '"+nhom+"' and i.date between '"+sday+"' and '"+eday+"'";
//            System.out.println(sql1);
            
            sql2 = "select sum(value) sum from importing i  ";
            sql2 += "inner join user u on i.user_id = u.id ";
            sql2 += "inner join import_type im on im.id = i.import_type_id ";
            sql2 += "where im.type = '"+nhom+"' and i.date between '"+sday+"' and '"+eday+"'";
//            System.out.println(sql2);
            
            try {
                
                
                rs = Database.stm.executeQuery(sql1);
                tbBangThongKe.setModel(new rsTableModel(rs));
                rs = Database.stm.executeQuery(sql2);
                if(rs.next()){
                    int sum = rs.getInt("sum");
                    lbTong.setText("Tổng thu nhập là : "+sum);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            
        }
        
        else{
//            System.out.println("4");
//            nhom = "";
//            thanhvien = "";
            sql1 = "select u.name, i.date, i.value, i.note, im.type from importing i  ";
            sql1 += "inner join user u on i.user_id = u.id ";
            sql1 += "inner join import_type im on im.id = i.import_type_id ";
            sql1 += "where i.date between '"+sday+"' and '"+eday+"'";
//            System.out.println(sql1);
            
            sql2 = "select sum(value) sum from importing i  ";
            sql2 += "inner join user u on i.user_id = u.id ";
            sql2 += "inner join import_type im on im.id = i.import_type_id ";
            sql2 += "where i.date between '"+sday+"' and '"+eday+"'";
//            System.out.println(sql2);
            
            try {
                
                
                rs = Database.stm.executeQuery(sql1);
                tbBangThongKe.setModel(new rsTableModel(rs));
                rs = Database.stm.executeQuery(sql2);
                if(rs.next()){
                    int sum = rs.getInt("sum");
                    lbTong.setText("Tổng thu nhập là : "+sum);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    
    public void thucHien2(){
        String sday = (((JTextField)jdcStartDay.getDateEditor().getUiComponent()).getText());
        String eday = (((JTextField)jdcEndDay.getDateEditor().getUiComponent()).getText());
        if((tfPhanNhom.getText().equals("") == false) && (tfThanhVien.getText().equals("") == false)){
//            System.out.println("1");
            nhom = tfPhanNhom.getText();
//            thanhvien = "";
            //cÃ¡i nÃ y dÃ¹ng Ä‘á»ƒ hiá»‡n ra báº£ng
            sql1 = "select u.name, e.date, e.value, e.note, ex.type from exporting e ";
            sql1 += "inner join user u on e.user_id = u.id ";
            sql1 += "inner join export_type ex on ex.id = e.export_type_id ";
            sql1 += "where ex.type = '"+nhom+"' and ex.type = '"+tfPhanNhom.getText()+"'and e.date between '"+sday+"' and '"+eday+"'";
//            System.out.println(sql1);
            
            
            //cÃ¡i nÃ y dÃ¹ng Ä‘á»ƒ tÃ­nh tá»•ng values(tiá»�n)
            sql2 = "select sum(value) sum from exporting e ";
            sql2 += "inner join user u on e.user_id = u.id ";
            sql2 += "inner join export_type ex on ex.id = e.export_type_id ";
            sql2 += "where ex.type = '"+nhom+"' and ex.type = '"+tfPhanNhom.getText()+"'and e.date between '"+sday+"' and '"+eday+"'";
//            System.out.println(sql2);
            
            try {
                
                
                rs = Database.stm.executeQuery(sql1);
                tbBangThongKe.setModel(new rsTableModel(rs));
                rs = Database.stm.executeQuery(sql2);
                if(rs.next()){
                    int sum = rs.getInt("sum");
                    lbTong.setText("Tổng chi tiêu là : "+sum);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
        else if(tfPhanNhom.getText().equals("") == true && tfThanhVien.getText().equals("") == false){
//            System.out.println("2");
            nhom = "";
            thanhvien = tfThanhVien.getText();
            sql1 = "select u.name, e.date, e.value, e.note, ex.type from exporting e ";
            sql1 += "inner join user u on e.user_id = u.id ";
            sql1 += "inner join export_type ex on ex.id = e.export_type_id ";
            sql1 += "where u.name = '"+thanhvien+"' and e.date between '"+sday+"' and '"+eday+"'";
//            System.out.println(sql1);
            
            sql2 = "select sum(value) sum from exporting e ";
            sql2 += "inner join user u on e.user_id = u.id ";
            sql2 += "inner join export_type ex on ex.id = e.export_type_id ";
            sql2 += "where u.name = '"+thanhvien+"' and e.date between '"+sday+"' and '"+eday+"'";
//            System.out.println(sql2);
            
            try {
                
                
                rs = Database.stm.executeQuery(sql1);
                tbBangThongKe.setModel(new rsTableModel(rs));
                rs = Database.stm.executeQuery(sql2);
                if(rs.next()){
                    int sum = rs.getInt("sum");
                    lbTong.setText("Tổng chi tiêu là : "+sum);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
        else if(tfPhanNhom.getText().equals("") == false && tfThanhVien.getText().equals("") == true){
//            System.out.println("3");
            nhom = tfPhanNhom.getText();
            thanhvien = tfThanhVien.getText();
            System.out.println(nhom );
            System.out.println(thanhvien);
            sql1 = "select u.name, e.date, e.value, e.note, ex.type from exporting e ";
            sql1 += "inner join user u on e.user_id = u.id ";
            sql1 += "inner join export_type ex on ex.id = e.export_type_id ";
            sql1 += "where ex.type = '"+nhom+"' and e.date between '"+sday+"' and '"+eday+"'";
//            System.out.println(sql1);
            
            sql2 = "select sum(value) sum from exporting e ";
            sql2 += "inner join user u on e.user_id = u.id ";
            sql2 += "inner join export_type ex on ex.id = e.export_type_id ";
            sql2 += "where ex.type = '"+nhom+"' and e.date between '"+sday+"' and '"+eday+"'";
//            System.out.println(sql2);
            
            try {
                
               rs = Database.stm.executeQuery(sql1);
                tbBangThongKe.setModel(new rsTableModel(rs));
                rs = Database.stm.executeQuery(sql2);
                if(rs.next()){
                    int sum = rs.getInt("sum");
                    lbTong.setText("Tổng chi tiêu là : "+sum);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            
        }
        
        else{
//            System.out.println("4");
//            nhom = "";
//            thanhvien = "";
            sql1 = "select u.name, e.date, e.value, e.note, ex.type from exporting e ";
            sql1 += "inner join user u on e.user_id = u.id ";
            sql1 += "inner join export_type ex on ex.id = e.export_type_id ";
            sql1 += "where e.date between '"+sday+"' and '"+eday+"'";
//            System.out.println(sql1);
            
            sql2 = "select sum(value) sum from exporting e ";
            sql2 += "inner join user u on e.user_id = u.id ";
            sql2 += "inner join export_type ex on ex.id = e.export_type_id ";
            sql2 += "where e.date between '"+sday+"' and '"+eday+"'";
//            System.out.println(sql2);
            
            try {
                
               
                rs = Database.stm.executeQuery(sql1);
                tbBangThongKe.setModel(new rsTableModel(rs));
                rs = Database.stm.executeQuery(sql2);
                if(rs.next()){
                    int sum = rs.getInt("sum");
                    lbTong.setText("Tổng chi tiêu là : "+sum);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCharThu;
    private javax.swing.JButton btChartChi;
    private javax.swing.JButton btHuyBo;
    private javax.swing.JButton btThucHien;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddImportExport;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnPrivilegeSet;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbPhanNhom;
    private javax.swing.JComboBox cbThanhVien;
    private javax.swing.JComboBox cboxBL;
    private javax.swing.JComboBox cboxIE;
    private javax.swing.JComboBox cboxIEType;
    private javax.swing.JComboBox cboxIEUser;
    private javax.swing.JComboBox cboxPrivilegeFrom;
    private javax.swing.JComboBox cboxPrivilegeTo;
    private javax.swing.JComboBox cboxType;
    private javax.swing.JDesktopPane dpAccountSettings;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JDesktopPane jDesktopPane3;
    private javax.swing.JDesktopPane jDesktopPane4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.toedter.calendar.JDateChooser jdcEndDay;
    private com.toedter.calendar.JDateChooser jdcStartDay;
    private javax.swing.JPanel jpAccount;
    private javax.swing.JPanel jpAddDelete;
    private javax.swing.JPanel jpBorrowLend;
    private javax.swing.JPanel jpEdit;
    private javax.swing.JPanel jpImportExport;
    private javax.swing.JPanel jpMain;
    private javax.swing.JPanel jpPrivilegeBorrow;
    private javax.swing.JPanel jpPrivilegeExport;
    private javax.swing.JPanel jpPrivilegeImport;
    private javax.swing.JPanel jpPrivilegeLend;
    private javax.swing.JPanel jpSetPrivilege;
    private javax.swing.JPanel jpThongKe;
    private javax.swing.JTabbedPane jtpAccount;
    private javax.swing.JLayeredPane layerAccountSettings;
    private javax.swing.JLayeredPane layerBorrowLend;
    private javax.swing.JLayeredPane layerImportExport;
    private javax.swing.JLayeredPane layerMenu;
    private javax.swing.JLayeredPane layerThongKe;
    private javax.swing.JLabel lbTong;
    private javax.swing.JList listPrivilegeBorrow;
    private javax.swing.JList listPrivilegeExport;
    private javax.swing.JList listPrivilegeImport;
    private javax.swing.JList listPrivilegeLend;
    private javax.swing.JRadioButton rbtChiTieu;
    private javax.swing.JRadioButton rbtThuNhap;
    private javax.swing.JTable tbBangThongKe;
    private javax.swing.JTable tbBorrowLend;
    private javax.swing.JTable tbImportExport;
    private javax.swing.JTextField tfPhanNhom;
    private javax.swing.JTextField tfThanhVien;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDate2;
    private javax.swing.JTextField txtExpiry;
    private javax.swing.JTextField txtNote;
    private javax.swing.JTextField txtPartner;
    private javax.swing.JTextField txtRate;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtValue;
    private javax.swing.JTextField txtValue2;
    // End of variables declaration//GEN-END:variables
}
