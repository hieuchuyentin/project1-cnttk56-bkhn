
import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author dodan_000
 */
public class StatisticsChartFrame extends javax.swing.JFrame {

    /**
     * Creates new form StatisticsChartFrame
     */
    ChartFrame chartFrame;
    JFreeChart chart;
    DefaultCategoryDataset categoryDataset = new DefaultCategoryDataset();;
    DefaultPieDataset pieDataset = new DefaultPieDataset();
    ChartPanel chartPanel = new ChartPanel(chart); 
    User user = new  User();
    ImportExport importExport = new ImportExport();
    Privilege privilege = new Privilege();
    
    public StatisticsChartFrame(String userName) {
        user.userName = userName;
        user.id = user.getUserId(userName);
        initComponents();
        initChartFrame();

    }
    
    public StatisticsChartFrame() {
        initComponents();
        initChartFrame();

    }
    
    private void initChartFrame(){
        //test
        Database.setState();
        user.userName = "hieu";
        user.id = 2;
        //end test
        ArrayList<String> list = new ArrayList<>();
        
        list = user.getUserList();
        for(String s:list){
            cboxChartUser.addItem(s);
        }
        cboxChartUser.setSelectedItem(user.userName);
        
        list = importExport.getImportTypeList();
        for(String s:list){
            cboxChartSubType.addItem(s);
        }
        
        chartPanel.setChart(chart);
        jpChart.setLayout(new BorderLayout());
        jpChart.add(chartPanel);      

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpChart = new javax.swing.JPanel();
        btnChartView = new javax.swing.JButton();
        jmcChart = new com.toedter.calendar.JMonthChooser();
        jycChart = new com.toedter.calendar.JYearChooser();
        jCheckBoxYear = new javax.swing.JCheckBox();
        jCheckBoxMonth = new javax.swing.JCheckBox();
        cboxChartUser = new javax.swing.JComboBox();
        cboxChartSubType = new javax.swing.JComboBox();
        jCheckBoxSubType = new javax.swing.JCheckBox();
        cboxChartType = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jpChartLayout = new javax.swing.GroupLayout(jpChart);
        jpChart.setLayout(jpChartLayout);
        jpChartLayout.setHorizontalGroup(
            jpChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 718, Short.MAX_VALUE)
        );
        jpChartLayout.setVerticalGroup(
            jpChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 365, Short.MAX_VALUE)
        );

        btnChartView.setText("View");
        btnChartView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChartViewActionPerformed(evt);
            }
        });

        jCheckBoxYear.setText("Theo năm");

        jCheckBoxMonth.setText("Theo tháng");

        jCheckBoxSubType.setText("Theo loại");

        cboxChartType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Import", "Export" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(cboxChartUser, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(cboxChartType, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboxChartSubType, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxSubType, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jmcChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxMonth))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxYear, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jycChart, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnChartView)
                .addGap(408, 408, 408))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(11, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jCheckBoxSubType)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cboxChartUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboxChartSubType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboxChartType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jCheckBoxYear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jycChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jCheckBoxMonth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jmcChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnChartView)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jpChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(69, 69, 69))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnChartViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChartViewActionPerformed

        String sql = "", s1, s2, s3;
        String title1 = "", title2 = "", title3 = "";
        int userId = user.getUserId((String) cboxChartUser.getSelectedItem());
        int year = jycChart.getYear();
        int month = jmcChart.getMonth() + 1;
        int subTypeId;

        if (cboxChartType.getSelectedIndex() == 0) {
            s1 = "importing";
            s2 = "import_type_id";
            s3 = "chi tiêu";
            subTypeId = importExport.getImportId((String) cboxChartSubType.getSelectedItem());
        } else {
            s1 = "exporting";
            s2 = "export_type_id";
            s3 = "thu nhập";
            subTypeId = importExport.getExportId((String) cboxChartSubType.getSelectedItem());
        }

        int i = (jCheckBoxSubType.isSelected() ? 4 : 0) + (jCheckBoxMonth.isSelected() ? 2 : 0) + (jCheckBoxYear.isSelected() ? 1 : 0);

        switch (i) {
            case 0:
                sql = "select sum(value),year(date) from " + s1 + " where user_id=" + userId + " group by(year(date))";
                title1 = "";
                title2 = "Bảng thống kê " + s3 + " các năm";
                title3 = "";
                break;
            case 1:
                sql = "select sum(value),month(date) from " + s1 + " where user_id=" + userId + " and year(date)=" + year + " group by (month(date))";
                title1 = "T.";
                title2 = "Bảng thống kê " + s3 + " trong năm " + year;
                title3 = "";
                break;
            case 2:
                sql = "select sum(value),year(date) from " + s1 + " where user_id=" + userId + " and month(date)=" + month + " group by (year(date))";
                title1 = "";
                title2 = "Bảng thống kê " + s3 + " tháng " + month + " trong các năm";
                title3 = "";
                break;
            case 3:
                sql = "select sum(value)," + s2 + " from " + s1 + " where user_id=" + userId + " and month(date)=" + month + " and year(date)=" + year + " group by " + s2;
                title1 = "";
                title2 = "Bảng thống kê " + s3 + " tháng " + month + " trong năm " + year;
                title3 = "";
                break;
            case 4:
                sql = "select sum(value),year(date) from " + s1 + " where user_id=" + userId + " and " + s2 + "=" + subTypeId + " group by (year(date))";
                title1 = "";
                title2 = "Bảng thống kê " + s3 + " '" + cboxChartSubType.getSelectedItem() + "' trong các năm";
                title3 = "";
                break;
            case 5:
                sql = "select sum(value),month(date) from " + s1 + " where user_id=" + userId + " and " + s2 + "=" + subTypeId + " and year(date)=" + year + " group by (month(date))";
                title1 = "T.";
                title2 = "Bảng thống kê " + s3 + " '" + cboxChartSubType.getSelectedItem() + "' trong năm " + year;
                title3 = "";
                break;
            case 6:
                sql = "select sum(value),year(date) from " + s1 + " where user_id=" + userId + " and month(date)=" + month + " group by (year(date))";
                title1 = "";
                title2 = "Bảng thống kê " + s3 + " '" + cboxChartSubType.getSelectedItem() + "' tháng " + month + " trong các năm";
                title3 = "";
                break;
            case 7:
                sql = "select sum(value) from " + s1 + " where user_id=" + userId + " and month(date)=" + month + " and year(date)=" + year;
                sql = "select sum(value),year(date) from " + s1 + " where user_id=" + userId + " and month(date)=" + month + " group by (year(date))";
                title1 = "";
                title2 = "Bảng thống kê " + s3 + " '" + cboxChartSubType.getSelectedItem() + "' tháng " + month + " trong năm " + year;
                title3 = "";
                break;
        }
        System.out.println(sql);
        ResultSet rs;
        try {
            rs = Database.stm.executeQuery(sql);
            //jTable1.setModel(new rsTableModel(rs));
            categoryDataset.clear();
            while (rs.next()) {
                categoryDataset.setValue(rs.getInt(1), "", title1 + rs.getString(2));
            }
            chart = ChartFactory.createBarChart3D("", title2, title3, categoryDataset, PlotOrientation.VERTICAL, false, true, false);
            chartPanel.setChart(chart);

        } catch (SQLException ex) {
            Logger.getLogger(StatisticsChartFrame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnChartViewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StatisticsChartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StatisticsChartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StatisticsChartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StatisticsChartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StatisticsChartFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChartView;
    private javax.swing.JComboBox cboxChartSubType;
    private javax.swing.JComboBox cboxChartType;
    private javax.swing.JComboBox cboxChartUser;
    private javax.swing.JCheckBox jCheckBoxMonth;
    private javax.swing.JCheckBox jCheckBoxSubType;
    private javax.swing.JCheckBox jCheckBoxYear;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.toedter.calendar.JMonthChooser jmcChart;
    private javax.swing.JPanel jpChart;
    private com.toedter.calendar.JYearChooser jycChart;
    // End of variables declaration//GEN-END:variables
}
